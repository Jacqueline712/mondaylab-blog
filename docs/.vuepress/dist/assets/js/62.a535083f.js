(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{609:function(t,_,v){"use strict";v.r(_);var a=v(13),e=Object(a.a)({},(function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"🎹-序言"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#🎹-序言"}},[t._v("#")]),t._v(" 🎹 序言")]),t._v(" "),v("p",[t._v("众所周知， "),v("code",[t._v("hash")]),t._v(" 和 "),v("code",[t._v("history")]),t._v(" 在前端面试中是很常考的一道题目。在学习本文内容之前，周一对 "),v("code",[t._v("hash")]),t._v(" 和 "),v("code",[t._v("history")]),t._v(" 的认知可能就在 "),v("code",[t._v("hash")]),t._v(" 的 "),v("code",[t._v("url")]),t._v(" 里面多了个 "),v("code",[t._v("#")]),t._v(" ，而 "),v("code",[t._v("history")]),t._v(" 就不会。然后，我认知里还有一个是只有 "),v("code",[t._v("history")]),t._v(" 才能做前后端分离，而 "),v("code",[t._v("hash")]),t._v(" 跟前后端分离没有关系。然而，现实是……")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://img-blog.csdnimg.cn/24025103d9d34637a5b525c504b6b12c.gif#pic_center",alt:"吓到跌倒"}})]),t._v(" "),v("p",[t._v("对于前端路由来说， "),v("code",[t._v("hash")]),t._v(" 和 "),v("code",[t._v("history")]),t._v(" 都可以用于前后端分离项目，且两者有各自的特点和各自的使用场景，在使用过程中主要要了解当前项目所处的场景，以便于更好地判断使用哪一种路由模式更佳。下面进入本文的讲解~😜")]),t._v(" "),v("h1",{attrs:{id:"🎸-一、前端路由原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#🎸-一、前端路由原理"}},[t._v("#")]),t._v(" 🎸 一、前端路由原理")]),t._v(" "),v("h2",{attrs:{id:"_1、spa"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1、spa"}},[t._v("#")]),t._v(" 1、SPA")]),t._v(" "),v("p",[v("strong",[t._v("SPA")]),t._v("，即"),v("strong",[t._v("单页面应用")]),t._v("(Single Page Application)。所谓单页 "),v("code",[t._v("Web")]),t._v(" 应用，就是只有一张 "),v("code",[t._v("Web")]),t._v(" 页面的应用。单页应用程序 (SPA) 是加载单个 "),v("code",[t._v("HTML")]),t._v(" 页面并在"),v("strong",[t._v("用户与应用程序交互时")]),t._v("动态更新该页面的 "),v("code",[t._v("Web")]),t._v(" 应用程序。浏览器一开始会加载必需的 "),v("code",[t._v("HTML")]),t._v(" 、 "),v("code",[t._v("CSS")]),t._v(" 和 "),v("code",[t._v("JavaScript")]),t._v(" ，所有的操作都在这张页面上完成，都由 "),v("code",[t._v("JavaScript")]),t._v(" 来控制。")]),t._v(" "),v("p",[t._v("现如今，为了配合单页面 "),v("code",[t._v("Web")]),t._v(" 应用快速发展的节奏，各类"),v("strong",[t._v("前端组件化技术栈")]),t._v("层出不穷。近几年来，通过不断的版本迭代， "),v("code",[t._v("vue")]),t._v(" 和 "),v("code",[t._v("react")]),t._v(" 两大技术栈脱颖而出，成为当下最受欢迎的两大技术栈。")]),t._v(" "),v("h2",{attrs:{id:"_2、什么时候需要路由"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2、什么时候需要路由"}},[t._v("#")]),t._v(" 2、什么时候需要路由")]),t._v(" "),v("p",[t._v("对于现代开发的项目来说，稍微复杂一点的 "),v("code",[t._v("SPA")]),t._v(" ，都需要用到"),v("strong",[t._v("路由")]),t._v("。而 "),v("code",[t._v("vue-router")]),t._v(" 正是 "),v("code",[t._v("vue")]),t._v(" 的路由标配，且 "),v("code",[t._v("vue-router")]),t._v(" 有"),v("strong",[t._v("两种模式")]),t._v("： "),v("code",[t._v("hash")]),t._v(" 和 "),v("code",[t._v("history")]),t._v(" 。")]),t._v(" "),v("p",[t._v("下面就依据这两种模式来进行一一讲解。")]),t._v(" "),v("h1",{attrs:{id:"🎷-二、hash-模式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#🎷-二、hash-模式"}},[t._v("#")]),t._v(" 🎷 二、Hash 模式")]),t._v(" "),v("h2",{attrs:{id:"_1、定义"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1、定义"}},[t._v("#")]),t._v(" 1、定义")]),t._v(" "),v("p",[v("code",[t._v("hash")]),t._v(" 模式是一种把前端路由的路径用井号 "),v("code",[t._v("#")]),t._v(" 拼接在真实 "),v("code",[t._v("url")]),t._v(" 后面的模式。当井号 "),v("code",[t._v("#")]),t._v(" 后面的路径发生变化时，浏览器并不会重新发起请求，而是会触发 "),v("code",[t._v("onhashchange")]),t._v(" 事件。")]),t._v(" "),v("h2",{attrs:{id:"_2、网页-url-组成部分"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2、网页-url-组成部分"}},[t._v("#")]),t._v(" 2、网页 url 组成部分")]),t._v(" "),v("h3",{attrs:{id:"_1-了解几个-url-的属性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-了解几个-url-的属性"}},[t._v("#")]),t._v(" （1）了解几个 url 的属性")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"center"}},[t._v("属性")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("含义")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("location.protocal")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("协议")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("location.hostname")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("主机名")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("location.host")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("主机")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("location.port")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("端口号")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("location.patchname")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("访问页面")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("location.search")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("搜索内容")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("location.hash")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("哈希值")])])])]),t._v(" "),v("h3",{attrs:{id:"_2-演示"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-演示"}},[t._v("#")]),t._v(" （2）演示")]),t._v(" "),v("p",[v("strong",[t._v("下面用一个网址来演示以上属性：")])]),t._v(" "),v("div",{staticClass:"language-js extra-class"},[v("pre",{pre:!0,attrs:{class:"language-js"}},[v("code",[v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//http://127.0.0.1:8001/01-hash.html?a=100&b=20#/aaa/bbb")]),t._v("\nlocation"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("protocal"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'http:'")]),t._v("\nlocaltion"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hostname"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '127.0.0.1'")]),t._v("\nlocation"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("host"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '127.0.0.1:8001'")]),t._v("\nlocation"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("port"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//8001")]),t._v("\nlocation"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pathname"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//'01-hash.html'")]),t._v("\nlocation"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("serach"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '?a=100&b=20'")]),t._v("\nlocation"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hash"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '#/aaa/bbb'")]),t._v("\n")])])]),v("h2",{attrs:{id:"_3、hash-的特点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3、hash-的特点"}},[t._v("#")]),t._v(" 3、hash 的特点")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("hash 变化会触发网页跳转，即浏览器的前进和后退。")])]),t._v(" "),v("li",[v("p",[v("code",[t._v("hash")]),t._v(" 可以改变 "),v("code",[t._v("url")]),t._v(" ，但是不会触发页面重新加载（hash 的改变是记录在 "),v("code",[t._v("window.history")]),t._v(" 中），即不会刷新页面。也就是说，所有页面的跳转都是在客户端进行操作。因此，这并不算是一次 "),v("code",[t._v("http")]),t._v(" 请求，所以这种模式不利于 "),v("code",[t._v("SEO")]),t._v(" 优化。"),v("code",[t._v("hash")]),t._v(" 只能修改 "),v("code",[t._v("#")]),t._v(" 后面的部分，所以只能跳转到与当前 "),v("code",[t._v("url")]),t._v(" 同文档的 "),v("code",[t._v("url")]),t._v(" 。")])]),t._v(" "),v("li",[v("p",[v("code",[t._v("hash")]),t._v(" 通过 "),v("code",[t._v("window.onhashchange")]),t._v(" 的方式，来监听 "),v("code",[t._v("hash")]),t._v(" 的改变，借此实现无刷新跳转的功能。")])]),t._v(" "),v("li",[v("p",[v("code",[t._v("hash")]),t._v(" 永远不会提交到 "),v("code",[t._v("server")]),t._v(" 端（可以理解为只在前端自生自灭）。")])])]),t._v(" "),v("h1",{attrs:{id:"🎺-三、history-模式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#🎺-三、history-模式"}},[t._v("#")]),t._v(" 🎺 三、History 模式")]),t._v(" "),v("h2",{attrs:{id:"_1、定义-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1、定义-2"}},[t._v("#")]),t._v(" 1、定义")]),t._v(" "),v("p",[v("code",[t._v("history API")]),t._v(" 是 "),v("code",[t._v("H5")]),t._v(" 提供的新特性，允许开发者"),v("strong",[t._v("直接更改前端路由")]),t._v("，即更新浏览器 "),v("code",[t._v("URL")]),t._v(" 地址而"),v("strong",[t._v("不重新发起请求")]),t._v("。")]),t._v(" "),v("h2",{attrs:{id:"_2、与-hash-的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2、与-hash-的区别"}},[t._v("#")]),t._v(" 2、与 hash 的区别")]),t._v(" "),v("p",[t._v("我们用一个例子来演示， "),v("code",[t._v("hash")]),t._v(" 与 "),v("code",[t._v("history")]),t._v(" 在浏览器下刷新时的区别。"),v("strong",[t._v("具体如下：")])]),t._v(" "),v("p",[v("strong",[t._v("正常页面浏览")])]),t._v(" "),v("div",{staticClass:"language-bash extra-class"},[v("pre",{pre:!0,attrs:{class:"language-bash"}},[v("code",[t._v("https://github.com/xxx 刷新页面\n\nhttps://github.com/xxx/yyy 刷新页面\n\nhttps://github.com/xxx/yyy/zzz 刷新页面\n")])])]),v("p",[v("strong",[t._v("改造 H5 history 模式")])]),t._v(" "),v("div",{staticClass:"language-bash extra-class"},[v("pre",{pre:!0,attrs:{class:"language-bash"}},[v("code",[t._v("https://github.com/xxx 刷新页面\n\nhttps://github.com/xxx/yyy 前端跳转，不刷新页面\n\nhttps://github.com/xxx/yyy/zzz 前端跳转，不刷新页面\n")])])]),v("h2",{attrs:{id:"_3、history-的-api"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3、history-的-api"}},[t._v("#")]),t._v(" 3、history 的 API")]),t._v(" "),v("p",[t._v("下面阐述几种 "),v("code",[t._v("HTML5")]),t._v(" 新增的 "),v("code",[t._v("history API")]),t._v(" 。"),v("strong",[t._v("具体如下表：")])]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"center"}},[t._v("API")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("定义")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("history.pushState(data, title [, url])")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("pushState 主要用于"),v("strong",[t._v("往历史记录堆栈顶部添加一条记录")]),t._v("。各参数解析如下："),v("strong",[t._v("①data")]),t._v("会在 onpopstate 事件触发时作为参数传递过去；"),v("strong",[t._v("②title")]),t._v("为页面标题，当前所有浏览器都会忽略此参数；③"),v("strong",[t._v("url")]),t._v("为页面地址，可选，缺少时表示为当前页地址")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("history.replaceState(data, title [, url])")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("更改当前的历史记录，参数同上； 上面的 pushState 是添加，这个更改")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("history.state")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("用于存储以上方法的 data 数据，不同浏览器的读写权限不一样")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("window.onpopstate")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("响应 pushState 或者 replaceState 的调用")])])])]),t._v(" "),v("h2",{attrs:{id:"_4、history-的特点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4、history-的特点"}},[t._v("#")]),t._v(" 4、history 的特点")]),t._v(" "),v("p",[t._v("对于 "),v("code",[t._v("history")]),t._v(" 来说，主要有以下特点：")]),t._v(" "),v("ul",[v("li",[t._v("新的 "),v("code",[t._v("url")]),t._v(" 可以是与当前 "),v("code",[t._v("url")]),t._v(" 同源的任意 "),v("code",[t._v("url")]),t._v(" ，也可以是与当前 "),v("code",[t._v("url")]),t._v(" 一样的地址，但是这样会导致的一个问题是，会把"),v("strong",[t._v("重复的这一次操作")]),t._v("记录到栈当中。")]),t._v(" "),v("li",[t._v("通过 "),v("code",[t._v("history.state")]),t._v(" ，添加任意类型的数据到记录中。")]),t._v(" "),v("li",[t._v("可以额外设置 "),v("code",[t._v("title")]),t._v(" 属性，以便后续使用。")]),t._v(" "),v("li",[t._v("通过 "),v("code",[t._v("pushState")]),t._v(" 、 "),v("code",[t._v("replaceState")]),t._v(" 来实现无刷新跳转的功能。")])]),t._v(" "),v("h2",{attrs:{id:"_5、存在问题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5、存在问题"}},[t._v("#")]),t._v(" 5、存在问题")]),t._v(" "),v("p",[t._v("对于 "),v("code",[t._v("history")]),t._v(" 来说，确实解决了不少 "),v("code",[t._v("hash")]),t._v(" 存在的问题，但是也带来了新的问题。"),v("strong",[t._v("具体如下：")])]),t._v(" "),v("ul",[v("li",[t._v("使用 "),v("code",[t._v("history")]),t._v(" 模式时，在对当前的页面进行刷新时，此时浏览器会重新发起请求。如果 "),v("code",[t._v("nginx")]),t._v(" 没有匹配得到当前的 "),v("code",[t._v("url")]),t._v(" ，就会出现 "),v("code",[t._v("404")]),t._v(" 的页面。")]),t._v(" "),v("li",[t._v("而对于 "),v("code",[t._v("hash")]),t._v(" 模式来说， 它虽然看着是改变了 "),v("code",[t._v("url")]),t._v(" ，但不会被包括在 "),v("code",[t._v("http")]),t._v(" 请求中。所以，它算是被用来指导浏览器的动作，并不影响服务器端。因此，改变 "),v("code",[t._v("hash")]),t._v(" 并没有真正地改变 "),v("code",[t._v("url")]),t._v(" ，所以页面路径还是之前的路径， "),v("code",[t._v("nginx")]),t._v(" 也就不会拦截。")]),t._v(" "),v("li",[t._v("因此，在使用 "),v("code",[t._v("history")]),t._v(" 模式时，需要"),v("strong",[t._v("通过服务端来允许地址可访问")]),t._v("，如果没有设置，就很容易导致出现 "),v("code",[t._v("404")]),t._v(" 的局面。")])]),t._v(" "),v("h2",{attrs:{id:"_6、两者选择"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_6、两者选择"}},[t._v("#")]),t._v(" 6、两者选择")]),t._v(" "),v("p",[t._v("下面我们再来介绍下在实际的项目中，如何对这两者进行选择。"),v("strong",[t._v("具体如下：")])]),t._v(" "),v("ul",[v("li",[v("code",[t._v("to B")]),t._v(" 的系统推荐用 "),v("code",[t._v("hash")]),t._v(" ，相对简单且容易使用，且因为 "),v("code",[t._v("hash")]),t._v(" 对 "),v("code",[t._v("url")]),t._v(" 规范不敏感；")]),t._v(" "),v("li",[v("code",[t._v("to C")]),t._v(" 的系统，可以考虑选择 "),v("code",[t._v("H5 history")]),t._v(" ，但是需"),v("strong",[t._v("要服务端支持")]),t._v("；")]),t._v(" "),v("li",[t._v("能先用简单的，就别用复杂的，"),v("strong",[t._v("要考虑成本和收益")]),t._v("。")])]),t._v(" "),v("h1",{attrs:{id:"🎻-四、结束语"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#🎻-四、结束语"}},[t._v("#")]),t._v(" 🎻 四、结束语")]),t._v(" "),v("p",[t._v("对于 "),v("code",[t._v("hash")]),t._v(" 和 "),v("code",[t._v("history")]),t._v(" 来讲，要清楚两者的区别以及两者各自的使用场景，还有各自的使用特点和优缺点。以上文章只是对前端路由原理的浅谈，希望对大家有帮助~")]),t._v(" "),v("p",[t._v("另下方第三个彩蛋放了一篇关于实现 "),v("code",[t._v("vue-router")]),t._v(" 的文章，学有余力的小伙伴有需要自取 o！")]),t._v(" "),v("h1",{attrs:{id:"🐣-彩蛋-one-more-thing"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#🐣-彩蛋-one-more-thing"}},[t._v("#")]),t._v(" 🐣 彩蛋 One More Thing")]),t._v(" "),v("h2",{attrs:{id:"🏷️-参考资料"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#🏷️-参考资料"}},[t._v("#")]),t._v(" 🏷️ 参考资料")]),t._v(" "),v("p",[t._v("jarvis👉"),v("a",{attrs:{href:"https://juejin.cn/post/6844904151206330375#heading-6",target:"_blank",rel:"noopener noreferrer"}},[t._v("在 SPA 项目的路由中，注意 hash 与 history 的区别"),v("OutboundLink")],1)]),t._v(" "),v("p",[t._v("vue-router 官方文档 👉"),v("a",{attrs:{href:"https://router.vuejs.org/zh/",target:"_blank",rel:"noopener noreferrer"}},[t._v("vue-router 的两种模式"),v("OutboundLink")],1)]),t._v(" "),v("p",[t._v("值得一看 👉"),v("a",{attrs:{href:"https://juejin.cn/post/6988316779818778631",target:"_blank",rel:"noopener noreferrer"}},[t._v("从使用到自己实现简单 Vue Router 看这个就行了"),v("OutboundLink")],1)]),t._v(" "),v("h2",{attrs:{id:"🏷️-番外篇"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#🏷️-番外篇"}},[t._v("#")]),t._v(" 🏷️ 番外篇")]),t._v(" "),v("blockquote",[v("ul",[v("li",[t._v("关注公众号"),v("strong",[t._v("星期一研究室")]),t._v("，第一时间关注优质文章，"),v("strong",[t._v("更多精选专栏待你解锁")]),t._v("~")]),t._v(" "),v("li",[t._v("如果这篇文章对你有用，记得"),v("strong",[t._v("留个脚印 jio")]),t._v("再走哦~")]),t._v(" "),v("li",[t._v("以上就是本文的全部内容！我们下期见！👋👋👋")])])])])}),[],!1,null,null,null);_.default=e.exports}}]);