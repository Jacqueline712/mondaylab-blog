(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{600:function(t,s,a){"use strict";a.r(s);var n=a(13),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("blockquote",[a("ul",[a("li",[t._v("原文地址："),a("a",{attrs:{href:"https://blog.bitsrc.io/dependency-injection-in-javascript-the-best-tool-youre-not-using-for-your-tests-4e83aca7579f",target:"_blank",rel:"noopener noreferrer"}},[t._v("Dependency Injection in JavaScript — the Best Tool You’re Not Using for your Tests"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("原文作者：Fernando Doglio")]),t._v(" "),a("li",[t._v("译文出自："),a("a",{attrs:{href:"https://juejin.cn/translate",target:"_blank",rel:"noopener noreferrer"}},[t._v("掘金翻译计划"),a("OutboundLink")],1)])])]),t._v(" "),a("h1",{attrs:{id:"js-中的依赖项注入-在测试中未使用过的最佳工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-中的依赖项注入-在测试中未使用过的最佳工具"}},[t._v("#")]),t._v(" JS 中的依赖项注入 — 在测试中未使用过的最佳工具")]),t._v(" "),a("blockquote",[a("p",[t._v("让我来为大家介绍在测试中最好的朋友。")])]),t._v(" "),a("h1",{attrs:{id:"引言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引言"}},[t._v("#")]),t._v(" 引言")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/44d729ac4f09488ebd23931628a37dae~tplv-k3u1fbpfcp-zoom-1.image",alt:"1_qnpc_WjjW0E60zbOTIAdXw.jpeg"}})]),t._v(" "),a("p",[t._v("代码中的依赖项可以是任何内容，从一个用于"),a("strong",[t._v("执行验证的第三方库")]),t._v("，到用于"),a("strong",[t._v("保存所有数据的数据库")]),t._v("。")]),t._v(" "),a("p",[a("strong",[t._v("依赖项")]),t._v("是我们日常开发任务中的一部分，但是当我们"),a("strong",[t._v("写单元测试")]),t._v("时，我们总会趋向于忘记，依赖项不是测试中一部分。因此，取而代之的是，往往我们很容易"),a("strong",[t._v("在没有意识到情况下")]),t._v("，编写了依赖于"),a("strong",[t._v("这些依赖项")]),t._v("的测试。这听起来似乎有点恐怖。 "),a("strong",[t._v("为什么呢？")]),t._v(" 因为基于以上这种情况，你就不得不检查（在这种情况下产生的）错误结果，同时，还要建立一个"),a("strong",[t._v("相对好的基础设施")]),t._v("来获取运行后的测试结果。")]),t._v(" "),a("p",[t._v("上述所说的还不是单元测试的全部内容，在本文中，将向你展示，遇到上述所说的情况时，如何去修复它。")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("小知识补充：")])]),t._v(" "),a("p",[a("code",[t._v("negative")]),t._v(" 在这里做"),a("strong",[t._v("名词")]),t._v("，表示 "),a("strong",[t._v("（否定的）结果")]),t._v(" 。")])]),t._v(" "),a("h1",{attrs:{id:"part1-确切存在的问题是什么呢"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#part1-确切存在的问题是什么呢"}},[t._v("#")]),t._v(" part1：确切存在的问题是什么呢？")]),t._v(" "),a("p",[t._v("接下来让我们快速地深入到这个问题：为什么我会说你正在"),a("strong",[t._v("不正确地")]),t._v("写着单元测试代码呢？")]),t._v(" "),a("p",[t._v("当我们学习单元测试的时候，我们会被告知"),a("strong",[t._v("单元测试")]),t._v("是用来验证围绕着"),a("strong",[t._v("代码单元")]),t._v("的逻辑测试。 "),a("strong",[t._v("“单元”")]),t._v(" 这个词的定义因文献而异，但从本质上来讲，"),a("strong",[t._v("单元")]),t._v("指的是逻辑中最小的可测试部分。因为已经是最小的可测试部分，那么这也就确保了你"),a("strong",[t._v("不会进行逐行测试")]),t._v("，同时"),a("strong",[t._v("也不会去测试一个完整的函数")]),t._v("，尤其是"),a("strong",[t._v("当同一时间要去处理多个事务时")]),t._v("，更不会去进行逐行测试或者去测试一个完整的函数。")]),t._v(" "),a("p",[t._v("下面，我们尝试着用几个例子来说明 "),a("strong",[t._v("“单元”")]),t._v(" 这个概念是"),a("strong",[t._v("不固定的")]),t._v("。然而，在实际的开发中，几乎没有人展示过"),a("strong",[t._v("以下这两种测试：")])]),t._v(" "),a("ul",[a("li",[t._v("① 处理"),a("strong",[t._v("将数据写进数据库")]),t._v("的测试；")]),t._v(" "),a("li",[t._v("② 处理"),a("strong",[t._v("从磁盘中去读取配置文件")]),t._v("的测试。")])]),t._v(" "),a("p",[t._v("接下来我们来分析，为什么这两种测试会经常被开发者忽略掉呢？")]),t._v(" "),a("p",[t._v("我们在测试中引入的任何与 "),a("code",[t._v("I/O")]),t._v(" 有关的活动，无论是有意地还是无意地，这些活动都会迫使你所编写的测试去依赖于当前"),a("strong",[t._v("正在交互的服务")]),t._v("。当然，在这里，这些"),a("strong",[t._v("I/O 活动")]),t._v("我指的是"),a("strong",[t._v("数据库或者硬盘")]),t._v("。但它同样也可以是"),a("strong",[t._v("任何其他东西")]),t._v("，比如外部 "),a("code",[t._v("API")]),t._v(" 。")]),t._v(" "),a("p",[t._v("因为我们在测试的时候有可能是在无意中引入，因此，如果是在运行测试时"),a("strong",[t._v("磁盘出现故障")]),t._v("，会发生什么情况呢？在这个时候，你的代码将无法读取到"),a("strong",[t._v("代码所对应的文件")]),t._v("，这个时候我们可能会想，这算是"),a("strong",[t._v("代码逻辑错误")]),t._v("吗？因为通常情况下，代码逻辑错误就是单元测试中失败的原因。但事实上你想错了，这不是代码逻辑错误的问题，而是因为"),a("strong",[t._v("服务有问题")]),t._v("而导致的单元测试失败。")]),t._v(" "),a("p",[t._v("这个时候你可能会想，服务有问题跟我的单元测试沾上关系嘞？")]),t._v(" "),a("p",[t._v("事实上，"),a("strong",[t._v("检查外部服务的稳定性")]),t._v("不是单元测试的责任，而是"),a("strong",[t._v("集成测试的目的")]),t._v("。你必须确保的是，"),a("strong",[t._v("单元测试只关注你的代码问题")]),t._v("，因此，你可以通过"),a("strong",[t._v("依赖项注入")]),t._v("的方式，来让单元测试做到这一点。")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("小知识补充：")])]),t._v(" "),a("p",[t._v("[1] : meant 在这里做非谓语成份，be meant to do sth 译为 按照道理，按照规矩的去做某事")]),t._v(" "),a("p",[t._v("[2] : refer to 谈及，提到")]),t._v(" "),a("p",[t._v("[3] : line-by-line adj. 逐行的")]),t._v(" "),a("p",[t._v("[4] : thing 在日常生活中常译为"),a("strong",[t._v("事情")]),t._v("，而在程序中，我们把它译为"),a("strong",[t._v("事务")])])]),t._v(" "),a("h1",{attrs:{id:"part2-模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#part2-模式"}},[t._v("#")]),t._v(" part2：模式")]),t._v(" "),a("p",[t._v("那么，如何通过"),a("strong",[t._v("依赖项注入")]),t._v("的方式，让单元测试"),a("strong",[t._v("只关注你的代码问题")]),t._v("呢？")]),t._v(" "),a("p",[t._v("模式也很简单，依赖项注入就是让你能够"),a("strong",[t._v("以某种方式")]),t._v("去覆盖"),a("strong",[t._v("一段代码")]),t._v("（这段代码也称为"),a("u",[t._v("客户端")]),t._v("）中"),a("strong",[t._v("所具有的依赖项")]),t._v("（这些依赖项也称为"),a("u",[t._v("服务端")]),t._v("）。因此，如果你正准备对一个"),a("strong",[t._v("已经写进数据库的函数")]),t._v("进行操作，那么你必须以某种方式去"),a("strong",[t._v("覆盖 DB 驱动程序")]),t._v("。如果你正准备去处理一个"),a("strong",[t._v("需要调用外部 API 的函数")]),t._v("，那么你将会覆盖到一个"),a("strong",[t._v("即将执行 HTTP 请求的库")]),t._v("，依次类推。")]),t._v(" "),a("p",[t._v("现在，相信大家已经感受到这个模式的美妙之处了。那依据以上这种模式，我们该如何去实现依赖项注入呢？")]),t._v(" "),a("p",[t._v("如果你是从"),a("strong",[t._v("零")]),t._v("开始，或者更好的情况下是，你有使用过测试驱动开发 "),a("code",[t._v("TDD")]),t._v(" ，那么最简单的方法是先考虑用 "),a("code",[t._v("TDD")]),t._v(" ，"),a("code",[t._v("TDD")]),t._v(" 能够为你"),a("strong",[t._v("从模块中导出的每一个方法和函数")]),t._v("提供一个简单的"),a("strong",[t._v("覆盖参数")]),t._v("。这样，即使你"),a("strong",[t._v("在没有进行测试的时候")]),t._v("，就会先有一个"),a("strong",[t._v("默认行为")]),t._v("（这个默认行为可以理解为前面所说的"),a("strong",[t._v("覆盖参数")]),t._v("）。从而等到你"),a("strong",[t._v("在进行测试时")]),t._v("，就有一个"),a("strong",[t._v("覆盖开关")]),t._v("可以进行操作。")]),t._v(" "),a("p",[t._v("从另一方面来说，如果你测试的代码没有事先考虑到上面所说的"),a("strong",[t._v("测试驱动开发")]),t._v(" （这是最常见的场景），那也问题不大。接下来，你将能够在 "),a("code",[t._v("JS")]),t._v(" 中找到实现"),a("strong",[t._v("依赖项注入")]),t._v("的不同方法。")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("小知识补充：")])]),t._v(" "),a("p",[t._v("[1] : TDD，即 Test-Driven Development 测试驱动开发")])]),t._v(" "),a("h1",{attrs:{id:"part3-为什么要引入依赖项注入呢"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#part3-为什么要引入依赖项注入呢"}},[t._v("#")]),t._v(" part3：为什么要引入依赖项注入呢？")]),t._v(" "),a("p",[t._v("现在，我们来谈论"),a("strong",[t._v("为什么要引入依赖项注入")]),t._v("这个问题。")]),t._v(" "),a("p",[t._v("这是一个很好的问题，我想我在本文的引言中，围绕着这个问题的答案绕了一大圈。现在应该能够得到很明确的答案了 👇：")]),t._v(" "),a("ul",[a("li",[t._v("如果你在单元测试中没有使用依赖项注入，那么你正在错误地做着单元测试。")])]),t._v(" "),a("p",[t._v("这听起来似乎有点奇怪，让我们来看看为什么会这样子。"),a("strong",[t._v("具体如下：")])]),t._v(" "),a("ul",[a("li",[t._v("你不想依赖于存在有"),a("strong",[t._v("潜在地无法控制的外部服务")]),t._v("来了解"),a("u",[t._v("程序的逻辑是否是稳定的")]),t._v("。")]),t._v(" "),a("li",[t._v("没有依赖项注入，你就没有办法去完全控制到"),a("strong",[t._v("这些外部服务是如何响应的")]),t._v("，从而增加了测试行为的不确定性。")]),t._v(" "),a("li",[t._v("如果这些外部服务出现延迟，那么 它们将直接影响测试的性能。当然，如果只跑"),a("strong",[t._v("10 个")]),t._v("测试，那可能没啥问题。但是呢，如果你在一个大的系统上工作，即使影响不到 1000 个测试，也会影响到 100 个测试。而且，"),a("strong",[t._v("运行测试")]),t._v("通常是任何 "),a("code",[t._v("CI/CD")]),t._v(" 管道的第一步，如果外部服务出现延迟，这也将会影响到"),a("strong",[t._v("所部署项目的性能")]),t._v("。")])]),t._v(" "),a("p",[t._v("说到这里，相信你已经可以自己提出一些其他的潜在问题了。这里值得注意的要点是，外部服务会"),a("strong",[t._v("降低测试的稳定性")]),t._v("，而测试的稳定性应该是一直 "),a("code",[t._v("100%")]),t._v(" 的情况才是。我们可以"),a("strong",[t._v("将测试视为幂等元")]),t._v("，对于相同受控环境下的每一次执行，结果应该是相同的。这就像有一个"),a("strong",[t._v("使用了全局变量的函数")]),t._v("，除非主动去控制该变量，否则是无法真正判断函数的输出结果是否总是相同的。")]),t._v(" "),a("p",[t._v("同样地，在这里，你无法去控制外部服务，因此，就需要去考虑在这种错误结果下"),a("strong",[t._v("会产生的副作用")]),t._v("。这也就是"),a("strong",[t._v("为什么要使用依赖项注入")]),t._v("的原因。")]),t._v(" "),a("h1",{attrs:{id:"part4-在-js-中如何去执行依赖项注入呢"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#part4-在-js-中如何去执行依赖项注入呢"}},[t._v("#")]),t._v(" part4：在 JS 中如何去执行依赖项注入呢？")]),t._v(" "),a("p",[t._v("多亏了 "),a("code",[t._v("JS")]),t._v(" 这门动态语言，使得这变得相当简单。")]),t._v(" "),a("p",[t._v("正如我下面所提及到的，有很多种方法可以去做这件事情。它们将依据"),a("strong",[t._v("具体的情况")]),t._v("去进行相应的操作。")]),t._v(" "),a("h2",{attrs:{id:"_1️⃣-最佳情况-在编写代码的同时边做测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1️⃣-最佳情况-在编写代码的同时边做测试"}},[t._v("#")]),t._v(" 1️⃣ 最佳情况：在编写代码的同时边做测试")]),t._v(" "),a("p",[t._v("在这种情况下，可以先简单地进行一些操作。"),a("strong",[t._v("如下代码所示：")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" query"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" connect "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./dbdriver'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("saveData")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" q "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" query"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" con "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" connect "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n    Call 'q' to execute the db query\n    Call 'con' to connect to the database\n    */")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("con")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" strQuery "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"insert into mydatabase.mytable (data) value (\'"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" data "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\')"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("q")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("strQuery"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("msg")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'There was a problem saving your data'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("在以上代码中，我们在 "),a("code",[t._v("saveData")]),t._v(" 函数中声明了依赖项作为"),a("strong",[t._v("最后的参数")]),t._v("，也就是 "),a("code",[t._v("{ q = query, con = connect } = {}")]),t._v(" 。在这句代码中，值得注意的是，我正在使用"),a("strong",[t._v("解构语法")]),t._v("将潜在性存在的覆盖内容给分组到一个"),a("strong",[t._v("单一对象")]),t._v("中。同时，在下面的代码中，大家可以发现到，不论它们被定义在何处，我始终引用着 "),a("code",[t._v("q")]),t._v(" 和 "),a("code",[t._v("con")]),t._v(" 。")]),t._v(" "),a("p",[t._v("在正常执行时，我只需要使用第一个参数，也就是 "),a("code",[t._v("q")]),t._v(" ，来调用 "),a("code",[t._v("saveData")]),t._v(" 函数。同时， "),a("code",[t._v("q")]),t._v(" 调用的其他参数将默认为是从"),a("strong",[t._v("数据库驱动程序包")]),t._v("中导入的参数，也就是上面代码中的 "),a("code",[t._v("strQuery")]),t._v(" 。")]),t._v(" "),a("p",[t._v("如果我现在在测试上面这个函数，那么我会这么处理。"),a("strong",[t._v("具体代码如下：")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("describe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"My module"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当数据到保存到数据库时，应该返回一个true")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("it")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"should return true if the data is saved into the database"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 此处的 saveData 是全局 require 形式")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("saveData")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hi there!'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 查询成功")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("q")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 连接成功")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("con")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("should"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("be"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("注意看下我是"),a("strong",[t._v("如何重写这两种依赖")]),t._v("的。我"),a("strong",[t._v("不再连接数据库")]),t._v("，同时，也很明确地表示"),a("strong",[t._v("不会再给数据库发送一个查询")]),t._v("。")]),t._v(" "),a("p",[t._v("相反，如果是数据没有被成功被保存到数据库的情况下，结果也总是成功的。用这种方法，代码可以这么写。"),a("strong",[t._v("如下所示：")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当数据库没有被保存到数据库时，应该返回一个error对象")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("it")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'should return an error object if the data is not saved into the database'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("saveData")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hi there!'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 查询失败")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("q")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 连接成功")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("con")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("should"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("equal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("msg")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'There was a problem saving your data'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("大家看上面这段代码，这次，我将 "),a("code",[t._v("query")]),t._v(" 函数总是返回一个 "),a("code",[t._v("false")]),t._v(" 的结果，用这种方法，我就可以很安全地测试到函数中的"),a("strong",[t._v("备用逻辑路径")]),t._v("。")]),t._v(" "),a("p",[t._v("这样，我就不再需要"),a("u",[t._v("数据库")]),a("strong",[t._v("一直处于活动状态并在任何时候运行")]),t._v("，至此，测试将毫不延迟地得到运行。")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("小知识补充：")])]),t._v(" "),a("p",[t._v("[1] : declare …… as …… 声明 … 为 …")]),t._v(" "),a("p",[t._v("[2] : group sth 这里的 group 是动词，表示将什么进行分组")]),t._v(" "),a("p",[t._v("[3] : no matter where … 无论…")])]),t._v(" "),a("h2",{attrs:{id:"_2️⃣-不理想情况-正在测试已经编写完成的代码并且无法更改它"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2️⃣-不理想情况-正在测试已经编写完成的代码并且无法更改它"}},[t._v("#")]),t._v(" 2️⃣ 不理想情况：正在测试已经编写完成的代码并且无法更改它")]),t._v(" "),a("p",[t._v("从另一个方面来说，如果你的任务是将测试添加到一大块已经编写完成的代码中，并且出于某些奇怪的要求，你又不能将它修改成像上面例子所呈现的。那么，这个时候我们就需要找到"),a("strong",[t._v("更具有创造性的方法")]),t._v("来解决这个问题。")]),t._v(" "),a("p",[t._v("举个例子，假设你正在写 "),a("code",[t._v("Node.js")]),t._v(" 的代码，那么你可以使用类似于 "),a("a",{attrs:{href:"https://www.npmjs.com/package/proxyquire",target:"_blank",rel:"noopener noreferrer"}},[t._v("proxyquire"),a("OutboundLink")],1),t._v(" 的东西， "),a("code",[t._v("proxyquire")]),t._v(" 允许你"),a("strong",[t._v("在不影响代码的情况下")]),t._v("替换正在测试的文件中所需的依赖项。比如，假设我们现在有这么一段代码，"),a("strong",[t._v("具体如下：")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" query"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" connect "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./dbdriver'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("saveData")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("connect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" strQuery "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"insert into mydatabase.mytable (data) value (\'"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" data "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\')"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("query")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("strQuery"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("msg")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'There was a problem saving your data'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("在上面的这段代码中，想要从外部重写 "),a("code",[t._v("dbdriver")]),t._v(" 模块并不容易，但是，如果使用了 "),a("code",[t._v("proxyquire")]),t._v(" ，我们就可以在测试的内部去执行这样的操作。"),a("strong",[t._v("具体代码如下：")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("describe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"My module"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果数据被成功保存到数据库中，应该返回一个true")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("it")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"should return true if the data is saved into the database"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" saveData "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("proxyquire")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./saveData.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'./dbdriver'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 查询成功")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("q")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 连接成功")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("con")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("saveData")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hi there!'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("should"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("be"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("现在，大家可以看到，我们将在测试用例中导入 "),a("code",[t._v("saveData")]),t._v(" 函数，而不再使用一个全局的 "),a("code",[t._v("require")]),t._v(" 。同时，我们还将使用一个"),a("strong",[t._v("自定义返回的对象")]),t._v("，来覆盖 "),a("code",[t._v("dbdriver")]),t._v(" 在文件中的中 "),a("code",[t._v("require")]),t._v(" 调用。从根本意义上来说，我们没有更改到原始代码，但是这个版本的 "),a("code",[t._v("saveData")]),t._v(" 将使用我们残留下来的驱动程序，而不是原来的驱动程序。")]),t._v(" "),a("p",[t._v("在上面的例子中，如果你使用的是 "),a("code",[t._v("browsify")]),t._v(" ，那么有一个 "),a("code",[t._v("proxyquire")]),t._v(" 的版本你可以使用它。"),a("a",{attrs:{href:"https://github.com/thlorenz/proxyquireify",target:"_blank",rel:"noopener noreferrer"}},[t._v("点击这里进行查看"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("p",[t._v("当然，还有另外一种情况是，如果你是在 "),a("code",[t._v("TypeScript")]),t._v(" 中使用，那么可以访问这两个网址："),a("strong",[t._v("①")]),t._v(" "),a("a",{attrs:{href:"https://inversify.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://inversify.io/"),a("OutboundLink")],1),t._v("；"),a("strong",[t._v("②")]),t._v(" "),a("a",{attrs:{href:"https://github.com/typestack/typedi",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/typestack/typedi"),a("OutboundLink")],1),t._v(" 。使用起来肯定没有那么简单，但这两个网址提供了一个极度兼容 "),a("code",[t._v("TypeScript")]),t._v(" 的 "),a("code",[t._v("API")]),t._v(" 。")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("小知识补充：")])]),t._v(" "),a("p",[t._v("[1] : override (sth1) with (sth2) 用 sth2 覆盖 sth1")]),t._v(" "),a("p",[t._v("[2] : stub 作名词时表示残余部分，+ed 后为 stubbed，当形容词使用，表示残留的。")]),t._v(" "),a("p",[t._v("[3] : browsify 是一个 npm 包")])]),t._v(" "),a("h1",{attrs:{id:"结束语"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结束语"}},[t._v("#")]),t._v(" 结束语")]),t._v(" "),a("p",[t._v("依赖项注入是一个非常好用的工具，它被许多开发人员严重忽视，尤其是在单元测试的时候。不可否认的是，它会在帮助我们编写可扩展且可靠的代码时创造一些奇迹。因此，这非常值得我们去尝试。")]),t._v(" "),a("p",[a("code",[t._v("JavaScript")]),t._v(" 中动态的类型和行为是值得我们去做更多尝试的理想选择。所以，多去留意 "),a("code",[t._v("JS")]),t._v(" 中的动态美！")]),t._v(" "),a("p",[t._v("在 "),a("code",[t._v("JavaScript")]),t._v(" 中你最喜欢的 "),a("code",[t._v("DI")]),t._v(" 库是什么呢？最重要的一点是，你是考虑使用 "),a("code",[t._v("DI")]),t._v(" 库进行编码（不理想情况），还是考虑在编写测试代码的时候去构建 "),a("code",[t._v("DI")]),t._v(" 呢（最佳情况）？（这句话中的所有 "),a("code",[t._v("DI")]),t._v(" 都翻译为"),a("strong",[t._v("依赖项注入")]),t._v("）")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("小知识补充：")])]),t._v(" "),a("p",[t._v("[1] : dipping your toes into the DI waters 柯林斯词典中将其译为 "),a("strong",[t._v("稍加尝试/谨慎尝试")])]),t._v(" "),a("p",[t._v("[2] : 第一部分的 DI water 表示去离子水，第二部分的 DI 是依赖项注入的"),a("strong",[t._v("缩写")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);