(window.webpackJsonp=window.webpackJsonp||[]).push([[132],{681:function(_,v,t){"use strict";t.r(v);var s=t(13),r=Object(s.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h1",{attrs:{id:"前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[_._v("#")]),_._v(" 前言")]),_._v(" "),t("p",[_._v("对于一个软件来说，总会存在各种各样的软件缺陷。因此我们需要通过软件测试来检查软件中存在的各种问题。")]),_._v(" "),t("p",[_._v("在下面的这篇文章中，将讲解软件测试的基础知识，让我们一起来了解一下吧 🙋")]),_._v(" "),t("h1",{attrs:{id:"一、-软件缺陷的概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、-软件缺陷的概述"}},[_._v("#")]),_._v(" 一、 软件缺陷的概述")]),_._v(" "),t("h2",{attrs:{id:"_1、什么是软件缺陷"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、什么是软件缺陷"}},[_._v("#")]),_._v(" 1、什么是软件缺陷")]),_._v(" "),t("p",[_._v("​ 软件缺陷就是软件产品中所存在的问题，最终表现为用户所需要的功能没有完全实现，不能满足或不能全部满足用户的需求。")]),_._v(" "),t("p",[_._v("​ IEEE(电气电子工程师协会)对软件缺陷有一个"),t("strong",[_._v("标准的定义")]),_._v("：")]),_._v(" "),t("p",[_._v("​ 从"),t("strong",[_._v("产品内部")]),_._v("看，软件缺陷是软件产品开发或维护过程中所存在的错误、误差等各种问题。")]),_._v(" "),t("p",[_._v("​ 从"),t("strong",[_._v("外部")]),_._v("看，软件缺陷是系统所需要实现的某种功能的失效或违背。")]),_._v(" "),t("h2",{attrs:{id:"_2、软件缺陷的类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、软件缺陷的类型"}},[_._v("#")]),_._v(" 2、软件缺陷的类型")]),_._v(" "),t("p",[_._v("（"),t("strong",[_._v("1")]),_._v("）软件未实现产品说明书要求的功能。")]),_._v(" "),t("p",[_._v("（"),t("strong",[_._v("2")]),_._v("）软件出现了产品说明书不应该出现的错误。")]),_._v(" "),t("p",[_._v("（"),t("strong",[_._v("3")]),_._v("）软件实现了产品说明书未提到的功能。")]),_._v(" "),t("p",[_._v("（"),t("strong",[_._v("4")]),_._v("）软件未实现产品说明书虽未明确提及但应该实现的功能。")]),_._v(" "),t("p",[_._v("（"),t("strong",[_._v("5")]),_._v("）软件难以理解、不易使用、运行缓慢——从测试员的角度看——最终用户会认为不好。")]),_._v(" "),t("h2",{attrs:{id:"_3、软件缺陷的案例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、软件缺陷的案例"}},[_._v("#")]),_._v(" 3、软件缺陷的案例")]),_._v(" "),t("p",[_._v("（"),t("strong",[_._v("1")]),_._v("）千年虫问题（产生约 1974 年）")]),_._v(" "),t("p",[_._v("（"),t("strong",[_._v("2")]),_._v("）爱国者导弹防御系统（1991 年）")]),_._v(" "),t("p",[_._v("（"),t("strong",[_._v("3")]),_._v("）英特尔奔腾浮点除法缺陷（1994 年）")]),_._v(" "),t("p",[_._v("（"),t("strong",[_._v("4")]),_._v("）“冲击波”病毒（2003 年）")]),_._v(" "),t("p",[_._v("（"),t("strong",[_._v("5")]),_._v("）诺基亚手机平台缺陷（2008 年）")]),_._v(" "),t("h2",{attrs:{id:"_4、软件缺陷的产生原因"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4、软件缺陷的产生原因"}},[_._v("#")]),_._v(" 4、软件缺陷的产生原因")]),_._v(" "),t("ul",[t("li",[_._v("需求不明确")]),_._v(" "),t("li",[_._v("软件结构复杂")]),_._v(" "),t("li",[_._v("开发人员水平有限")]),_._v(" "),t("li",[_._v("项目期限短")]),_._v(" "),t("li",[_._v("使用新技术")]),_._v(" "),t("li",[_._v("其他原因")])]),_._v(" "),t("h2",{attrs:{id:"_5、软件缺陷的分类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5、软件缺陷的分类"}},[_._v("#")]),_._v(" 5、软件缺陷的分类")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210327113201592.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDgwMzc1Mw==,size_16,color_FFFFFF,t_70#pic_center",alt:"软件缺陷的分类"}})]),_._v(" "),t("h2",{attrs:{id:"_6、软件缺陷的处理流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6、软件缺陷的处理流程"}},[_._v("#")]),_._v(" 6、软件缺陷的处理流程")]),_._v(" "),t("p",[_._v("每个公司的软件缺陷处理流程不尽相同，但是它们遵循的最基本流程是一样的，都要经过"),t("strong",[_._v("提交")]),_._v("、"),t("strong",[_._v("分配")]),_._v("、"),t("strong",[_._v("确认")]),_._v("、"),t("strong",[_._v("处理")]),_._v("、"),t("strong",[_._v("复测")]),_._v("、"),t("strong",[_._v("关闭")]),_._v("等环节。")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210327124744296.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDgwMzc1Mw==,size_16,color_FFFFFF,t_70#pic_center",alt:"软件缺陷的处理流程"}})]),_._v(" "),t("ul",[t("li",[t("strong",[_._v("提交")]),_._v("：测试人员发现缺陷之后，将缺陷提交给测试组长。")]),_._v(" "),t("li",[t("strong",[_._v("分配")]),_._v("：测试组长接收到测试组员提交的缺陷之后，将其移交给开发人员。")]),_._v(" "),t("li",[t("strong",[_._v("确认")]),_._v("：开发人员接收到移交的缺陷之后，会与团队甚至测试人员一起商议，确定该缺陷是否是一个缺陷。")]),_._v(" "),t("li",[t("strong",[_._v("拒绝")]),_._v("：如果经过商议之后，缺陷不是一个真正的缺陷则拒绝处理，关闭缺陷。如果经过商议之后，确定其是一个真正的缺陷，则可以根据缺陷的严重程度或优先级等立即处理或延期处理。")]),_._v(" "),t("li",[t("strong",[_._v("复测")]),_._v("：开发人员修改好缺陷之后，测试人员重新进行测试（复测），检测缺陷是否确实已经修改。如果未被正确修改，则重新提交缺陷。")]),_._v(" "),t("li",[t("strong",[_._v("关闭")]),_._v("：测试人员重新测试之后，如果缺陷已经被正确修改，则将缺陷关闭，整个缺陷处理完成。")])]),_._v(" "),t("h2",{attrs:{id:"_7、多学一招-缺陷报告-由测试人员完成"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7、多学一招-缺陷报告-由测试人员完成"}},[_._v("#")]),_._v(" 7、多学一招：缺陷报告（由测试人员完成）")]),_._v(" "),t("p",[_._v("测试人员在提交软件测试时都会按照公司规定的模板（Word、Excel、缺陷管理软件等）将缺陷的详细情况记录下来生成缺陷报告，每个公司的缺陷报告模板并不相同，但一般都会包括"),t("strong",[_._v("缺陷的编号")]),_._v("、"),t("strong",[_._v("类型")]),_._v("、"),t("strong",[_._v("严重程度")]),_._v("、"),t("strong",[_._v("优先级")]),_._v("、"),t("strong",[_._v("测试环境")]),_._v("等，有时还会有"),t("strong",[_._v("测试人员的建议")]),_._v("。")]),_._v(" "),t("h2",{attrs:{id:"_8、常见软件缺陷管理工具"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8、常见软件缺陷管理工具"}},[_._v("#")]),_._v(" 8、常见软件缺陷管理工具")]),_._v(" "),t("p",[t("strong",[_._v("（1）Bugzilla")])]),_._v(" "),t("ul",[t("li",[_._v("Bugzilla 是 Mozilla 公司提供的一款免费的"),t("strong",[_._v("软件缺陷管理工具")]),_._v("。")]),_._v(" "),t("li",[_._v("Bugzilla 能够建立一个完整的"),t("strong",[_._v("缺陷跟踪体系")]),_._v("，包括"),t("strong",[_._v("缺陷跟踪")]),_._v("、"),t("strong",[_._v("记录")]),_._v("、"),t("strong",[_._v("缺陷报告")]),_._v("、"),t("strong",[_._v("处理解决情况")]),_._v("等。")]),_._v(" "),t("li",[_._v("使用 Bugzilla 管理软件缺陷时，测试人员可以在 Bugzilla 上提交缺陷报告，Bugzilla 会将缺陷转给相应的开发者，开发者可以使用 Bugzilla 做一个"),t("strong",[_._v("工作表")]),_._v("，标明要做的事情的"),t("strong",[_._v("优先级")]),_._v("、"),t("strong",[_._v("时间安排")]),_._v("和"),t("strong",[_._v("跟踪记录")]),_._v("。")])]),_._v(" "),t("p",[t("strong",[_._v("（2）禅道")])]),_._v(" "),t("ul",[t("li",[_._v("禅道是一款优秀的"),t("strong",[_._v("国产项目管理软件")]),_._v("，它集"),t("strong",[_._v("产品管理")]),_._v("、"),t("strong",[_._v("项目管理")]),_._v("、"),t("strong",[_._v("质量管理")]),_._v("、"),t("strong",[_._v("缺陷管理")]),_._v("、"),t("strong",[_._v("文档管理")]),_._v("、"),t("strong",[_._v("组织管理")]),_._v("和"),t("strong",[_._v("事务管理")]),_._v("于一体，是一款功能完备的项目管理软件，完美地覆盖了"),t("strong",[_._v("项目管理的核心流程")]),_._v("。")]),_._v(" "),t("li",[_._v("禅道分为"),t("strong",[_._v("专业")]),_._v("和"),t("strong",[_._v("开源")]),_._v("两个版本，专业版是收费软件，开源版是免费软件，"),t("u",[_._v("对于日常的项目管理，开源版本已经足够使用")]),_._v("。")])]),_._v(" "),t("p",[t("strong",[_._v("（3）JIRA")])]),_._v(" "),t("ul",[t("li",[_._v("JIRA 是 Atlassian 公司开发的"),t("strong",[_._v("项目与实务跟踪工具")]),_._v("，被广泛用于"),t("strong",[_._v("缺陷跟踪")]),_._v("、"),t("strong",[_._v("客户实务")]),_._v("、"),t("strong",[_._v("需求收集")]),_._v("、"),t("strong",[_._v("流程审批")]),_._v("、"),t("strong",[_._v("任务跟踪")]),_._v("、"),t("strong",[_._v("项目跟踪")]),_._v("和"),t("strong",[_._v("敏捷管理")]),_._v("等工作领域。JIRA 配置灵活、功能全面、部署简单、扩展丰富、易用性好，是目前比较流行的基于 Java 架构的管理工具。")]),_._v(" "),t("li",[_._v("JIRA 软件有两个认可度很高的特色："),t("strong",[_._v("第一个是")]),_._v("Atlassian 公司对该开源项目实行"),t("strong",[_._v("免费提供")]),t("u",[_._v("缺陷跟踪服务")]),_._v("；"),t("strong",[_._v("第二个是")]),_._v("用户在购买 JIRA 软件同时"),t("strong",[_._v("将源代码也购置进来，方便做二次开发")]),_._v("。")])]),_._v(" "),t("h2",{attrs:{id:"_9、修复软件缺陷的成本"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9、修复软件缺陷的成本"}},[_._v("#")]),_._v(" 9、修复软件缺陷的成本")]),_._v(" "),t("p",[_._v("软件开发过程是使用软件工程的方法，在整个过程中，都有可能出现各种各样的软件缺陷。**随着开发时间的推移，软件缺陷修复成本呈倍数的增长。**假如早在进行分析时发现相关功能缺失，立即补上就可以了，可以说付出的代价小得几乎忽略不计。如果在发布时发现缺失某个功能，那么此时加上一个功能，相当于重新开发一样，这时的修补费用可以说高了许多。因此"),t("u",[t("strong",[_._v("要尽早进行测试")])]),_._v("。")]),_._v(" "),t("h1",{attrs:{id:"二、-软件的概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、-软件的概述"}},[_._v("#")]),_._v(" 二、 软件的概述")]),_._v(" "),t("h2",{attrs:{id:"_1、软件生命周期"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、软件生命周期"}},[_._v("#")]),_._v(" 1、软件生命周期")]),_._v(" "),t("p",[_._v("先来了解软件生命周期的"),t("strong",[_._v("全过程")]),_._v("：")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210327122404697.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDgwMzc1Mw==,size_16,color_FFFFFF,t_70#pic_center",alt:"软件生命周期的全过程"}})]),_._v(" "),t("p",[_._v("下面对软件生命周期各个过程进行"),t("strong",[_._v("逐一解析")]),_._v("：")]),_._v(" "),t("p",[t("strong",[_._v("（1）问题定义")]),_._v("：由"),t("strong",[_._v("软件开发方")]),_._v("与"),t("strong",[_._v("需求方")]),_._v("共同讨论，主要确定软件的"),t("strong",[_._v("开发目标")]),_._v("及其"),t("strong",[_._v("可行性")]),_._v("。")]),_._v(" "),t("p",[t("strong",[_._v("（2）需求分析")]),_._v("：对"),t("strong",[_._v("软件需求")]),_._v("进行更深入的分析，划分出软件需要实现的"),t("strong",[_._v("功能模块")]),_._v("，并制作成"),t("strong",[_._v("文档")]),_._v("。"),t("strong",[_._v("（需求分析说明书）")])]),_._v(" "),t("p",[t("strong",[_._v("（3）软件设计")]),_._v("：在需求分析结果的基础上，对整个软件系统进行设计，包括"),t("strong",[_._v("系统框架设计")]),_._v("、"),t("strong",[_._v("数据库设计")]),_._v("等。"),t("strong",[_._v("（概要设计、详细设计）")])]),_._v(" "),t("p",[t("strong",[_._v("（4）软件开发")]),_._v("：在软件设计的基础上，选择一种"),t("strong",[_._v("编程语言")]),_._v("进行开发。")]),_._v(" "),t("p",[t("strong",[_._v("（5）软件测试")]),_._v("：软件开发完成后对软件进行测试，以查找"),t("strong",[_._v("软件设计与软件开发过程")]),_._v("中存在的问题并加以修正。")]),_._v(" "),t("p",[t("strong",[_._v("（6）软件维护")]),_._v("：软件投入使用之后，可能无法满足用户的使用需求，此时就需要对软件进行维护升级以延续软件的使用寿命。软件维护是软件生命周期中持续时间"),t("strong",[_._v("最长")]),_._v("的阶段。")]),_._v(" "),t("h2",{attrs:{id:"_2、开发过程中的角色"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、开发过程中的角色"}},[_._v("#")]),_._v(" 2、开发过程中的角色")]),_._v(" "),t("p",[t("strong",[_._v("（1）高级经理")]),_._v("：参与项目过程中"),t("strong",[_._v("各个关键环节")]),_._v("的活动，关注产品开发的进度，对风险控制、资源提供做出决策。")]),_._v(" "),t("p",[t("strong",[_._v("（2）产品经理（项目经理）")]),_._v("：作为"),t("strong",[_._v("客户方")]),_._v("和"),t("strong",[_._v("公司内部")]),_._v("交流的纽带，对项目过程进行监控，对项目的进度、质量负责。")]),_._v(" "),t("p",[t("strong",[_._v("（3）开发经理")]),_._v("：是具体"),t("strong",[_._v("开发过程的领导者")]),_._v("，必需由熟悉业务和开发技术的专家担任；职责是界定需求，确定适当的技术架构和体系，保证软件产品按照设计的标准开发。")]),_._v(" "),t("p",[t("strong",[_._v("（4）设计师")]),_._v("："),t("strong",[_._v("软件蓝图设计者")]),_._v("，可以分需求分析师、架构设计师、业务设计师三种。基本活动包括：需求分析、架构设计和功能设计，按照规范编写相应的文档。")]),_._v(" "),t("p",[t("strong",[_._v("（5）测试经理")]),_._v("："),t("strong",[_._v("测试活动的领导者")]),_._v("，是公司内部认定的"),t("strong",[_._v("产品质量责任人")]),_._v("。责任是计划和组织测试人员对目标产品进行测试，发现 bug、跟踪 bug 直到解决 bug；计划和组织用户培训工作。")]),_._v(" "),t("p",[t("strong",[_._v("（6）开发人员")]),_._v("：根据设计师的设计成果进行"),t("strong",[_._v("具体编码工作")]),_._v("，对自己的代码进行基本的"),t("strong",[_._v("单元测试")]),_._v("。")]),_._v(" "),t("p",[t("strong",[_._v("（7）测试人员")]),_._v("：根据测试经理的计划和测试总体方案对目标产品进行测试，编写"),t("strong",[_._v("测试用例")]),_._v("和"),t("strong",[_._v("测试代码")]),_._v("，发现和跟踪 bug；编写用户手册；进行用户培训和教育。")]),_._v(" "),t("p",[t("strong",[_._v("（8）项目实施人员")]),_._v("：针对工程性质的项目必需的人员配置，负责软件系统"),t("strong",[_._v("安装配置")]),_._v("、"),t("strong",[_._v("系统割接")]),_._v("、"),t("strong",[_._v("运行期间的维护工作")]),_._v("。")]),_._v(" "),t("h2",{attrs:{id:"_3、软件开发模型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、软件开发模型"}},[_._v("#")]),_._v(" 3、软件开发模型")]),_._v(" "),t("p",[t("strong",[_._v("（1）瀑布模型")])]),_._v(" "),t("ul",[t("li",[t("strong",[_._v("优点")]),_._v("：检查点清晰，分工明确，有利于大型软件软件开发人员的组织管理及工具的使用与研究，可以提高开发的效率。")]),_._v(" "),t("li",[t("strong",[_._v("缺点")]),_._v("：严格按照线性执行，增加了开发风险；要求必须有产出结果，增加了开发工作量。那么，对于现代软件，各阶段之间的关系很少是线性，瀑布模型已经不适合现代软件开发。")])]),_._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210327122429150.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDgwMzc1Mw==,size_16,color_FFFFFF,t_70#pic_center",alt:"瀑布模型"}})]),_._v(" "),t("p",[t("strong",[_._v("（2）快速原型模型")])]),_._v(" "),t("ul",[t("li",[t("strong",[_._v("优点")]),_._v("：克服了需求不明确带来的风险，适用于不能预先确定需求的软件项目。")]),_._v(" "),t("li",[t("strong",[_._v("缺点")]),_._v("：原型设计较难；不利于开发人员对产品的扩展。")])]),_._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210327122441349.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDgwMzc1Mw==,size_16,color_FFFFFF,t_70#pic_center",alt:"快速原型模型"}})]),_._v(" "),t("p",[t("strong",[_._v("（3）迭代模型")])]),_._v(" "),t("ul",[t("li",[t("strong",[_._v("优点")]),_._v("：适应客户需求变更；降低了开发成本和风险。")]),_._v(" "),t("li",[t("strong",[_._v("缺点")]),_._v("：增加了集成失败风险；容易退化为“边做边改”模式，失去对整个项目的控制。")])]),_._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210327122452757.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDgwMzc1Mw==,size_16,color_FFFFFF,t_70#pic_center",alt:"迭代模型"}})]),_._v(" "),t("p",[t("strong",[_._v("（4）螺旋模型")])]),_._v(" "),t("ul",[t("li",[t("strong",[_._v("优点")]),_._v("：强调了风险分析，有助于将软件质量融入开发中；小分段构建大型软件，易于计算成本；客户参与，保证项目可控性。")]),_._v(" "),t("li",[t("strong",[_._v("缺点")]),_._v("：构建过程太过繁琐，不适合小型项目。")])]),_._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210327122518186.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDgwMzc1Mw==,size_16,color_FFFFFF,t_70#pic_center",alt:"螺旋模型"}})]),_._v(" "),t("p",[t("strong",[_._v("（5）敏捷模型")])]),_._v(" "),t("ul",[t("li",[t("p",[t("strong",[_._v("定义")]),_._v("：敏捷模型以用户的需求进化为核心，采用迭代、循序渐进的方法进行软件开发。")])]),_._v(" "),t("li",[t("p",[t("strong",[_._v("特点")]),_._v("：")]),_._v(" "),t("ul",[t("li",[_._v("项目被拆分成多个子项目，迭代完成，每个迭代都要经过测试。")]),_._v(" "),t("li",[_._v("快速响应需求变更，在修改过程中，软件一直处于可用状态。")]),_._v(" "),t("li",[_._v("不断对产品进行细微、渐进式地改进，每次改进一小部分，如果可行再逐步扩大改进范围。")]),_._v(" "),t("li",[_._v("开发未动，测试先行。")]),_._v(" "),t("li",[_._v("注重“人”的作用。")])])]),_._v(" "),t("li",[t("p",[t("strong",[_._v("优点")]),_._v("：及时响应客户需求变更，不断适应新的趋势。")])]),_._v(" "),t("li",[t("p",[t("strong",[_._v("缺点")]),_._v("：管理相对混乱，不适合大型项目。")])])]),_._v(" "),t("p",[t("strong",[_._v("PS")]),_._v(" 以上内容是对"),t("strong",[_._v("软件开发模型的简要概括")]),_._v("，如需了解软件开发模型的详细内容，请前往"),t("a",{attrs:{href:"https://blog.csdn.net/weixin_44803753/article/details/115049621",target:"_blank",rel:"noopener noreferrer"}},[_._v("软件工程和过程模型"),t("OutboundLink")],1)]),_._v(" "),t("h2",{attrs:{id:"_4、软件质量概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4、软件质量概述"}},[_._v("#")]),_._v(" 4、软件质量概述")]),_._v(" "),t("p",[t("strong",[_._v("（1）定义")]),_._v("：软件质量是指软件产品"),t("strong",[_._v("满足基本需求及隐式需求")]),_._v("的程度。软件产品满足基本需求是指其能满足软件开发时所规定需求的特性；其次是软件产品满足隐式需求的程度。")]),_._v(" "),t("p",[t("strong",[_._v("（2）软件质量模型")]),_._v("：ISO/IEC 9126:1991 质量模型是最通用的一个评价软件质量的国际标准，建立在 MCCall 和 Boehm 模型基础之上，主要描述了"),t("strong",[_._v("内部质量")]),_._v("、"),t("strong",[_._v("外部质量")]),_._v("和"),t("strong",[_._v("使用质量")]),_._v("。由"),t("strong",[_._v("6 个特性和 27 个子特性")]),_._v("组成。")]),_._v(" "),t("p",[t("strong",[_._v("软件质量模型图如下")]),_._v("：")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/2021032712260231.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDgwMzc1Mw==,size_16,color_FFFFFF,t_70#pic_center",alt:"软件质量模型"}})]),_._v(" "),t("p",[_._v("对内部质量、外部质量和使用质量进行"),t("strong",[_._v("逐一解析")]),_._v("：")]),_._v(" "),t("p",[t("strong",[_._v("① 内部质量")]),_._v("：针对内部质量需求被测量和评价的质量，可维护性、灵活性、可移植性、可重用性、可读性、可测试性、可理解性。")]),_._v(" "),t("p",[t("strong",[_._v("② 外部质量")]),_._v("：使用外部度量在模拟环境中，用模拟数据测试时，所被测量和评价的质量，即在预定的系统环境中运行时可能达到的质量水平。正确性、可用性、效率、可靠性、完整性、适应性、精确性、坚固性。")]),_._v(" "),t("p",[t("strong",[_._v("③ 使用质量")]),_._v("：在规定的使用环境下，软件产品使"),t("strong",[_._v("特定用户")]),_._v("在达到规定目标方面的能力。有效性、生产率、安全性、满意程度等。")]),_._v(" "),t("h1",{attrs:{id:"三、-软件测试的概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、-软件测试的概述"}},[_._v("#")]),_._v(" 三、 软件测试的概述")]),_._v(" "),t("h2",{attrs:{id:"_1、软件测试的发展"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、软件测试的发展"}},[_._v("#")]),_._v(" 1、软件测试的发展")]),_._v(" "),t("p",[_._v("软件测试的发展也经历了一个漫长的过程，其发展过程可用下图表示：")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210327122621435.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDgwMzc1Mw==,size_16,color_FFFFFF,t_70#pic_center",alt:"软件测试的发展"}})]),_._v(" "),t("h2",{attrs:{id:"_2、软件测试的定义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、软件测试的定义"}},[_._v("#")]),_._v(" 2、软件测试的定义")]),_._v(" "),t("p",[t("strong",[_._v("（1）1983 年，IEEE 给软件测试的定义：")])]),_._v(" "),t("p",[_._v("使用"),t("strong",[_._v("人工或自动的手段")]),_._v("来运行或测定某个软件系统的过程，其目的在于检验它是否满足规定的需求或弄清预期结果与实际结果之间的差别。")]),_._v(" "),t("p",[t("strong",[_._v("（2）1990 年，IEEE 再次给出软件测试的定义：")])]),_._v(" "),t("p",[t("strong",[_._v("①")]),_._v("在"),t("strong",[_._v("特定的条件下")]),_._v("运行系统或构件，观察或记录结果，对系统的某个方面做出评价；")]),_._v(" "),t("p",[t("strong",[_._v("②")]),_._v("分析某个软件项以发现现存的和要求的条件之差别并评价此软件项的特性。")]),_._v(" "),t("blockquote",[t("p",[t("strong",[_._v("总结")]),_._v("：")]),_._v(" "),t("ul",[t("li",[_._v("以上的定义都有"),t("strong",[_._v("一定的片面性")]),_._v("。不能只对系统程序进行测试，找出系统程序中的错误，而对分析、设计等过程发生的错误视而不见。")]),_._v(" "),t("li",[_._v("软件产品由"),t("strong",[_._v("文档、数据和程序")]),_._v("组成，那么"),t("strong",[_._v("软件测试")]),_._v("就是对"),t("u",[_._v("软件开发过程中形成的文档、数据以及程序进行相关的测试")]),_._v("。")])])]),_._v(" "),t("h2",{attrs:{id:"_3、软件测试的目的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、软件测试的目的"}},[_._v("#")]),_._v(" 3、软件测试的目的")]),_._v(" "),t("ul",[t("li",[_._v("对于"),t("strong",[_._v("软件开发")]),_._v("来说，软件测试通过找到的问题缺陷帮助开发人员找到开发过程中存在的问题，包括软件开发的模式、工具、技术等方面存在的问题与不足，预防下次缺陷的产生。")]),_._v(" "),t("li",[_._v("对于"),t("strong",[_._v("软件测试")]),_._v("来说，使用最少的人力、物力、时间等找到软件中"),t("strong",[_._v("隐藏的缺陷")]),_._v("，保证软件的质量，也为以后软件测试积累丰富的经验。")]),_._v(" "),t("li",[_._v("对于"),t("strong",[_._v("客户需求")]),_._v("来说，软件测试能够检验软件"),t("strong",[_._v("是否符合客户需求")]),_._v("，对软件质量进行评估和度量，为客户评审软件提供有力的依据。")])]),_._v(" "),t("h2",{attrs:{id:"_4、软件测试的分类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4、软件测试的分类"}},[_._v("#")]),_._v(" 4、软件测试的分类")]),_._v(" "),t("p",[t("strong",[_._v("（1）按照测试阶段分类")])]),_._v(" "),t("ul",[t("li",[t("strong",[_._v("单元测试")]),_._v("：验证软件单元是否符合软件需求与设计，开发人员自测。")]),_._v(" "),t("li",[t("strong",[_._v("集成测试")]),_._v("：将已经测试过的软件单元组合在一起测试它们之间的接口，用于验证软件是否满足设计需求。")]),_._v(" "),t("li",[t("strong",[_._v("系统测试")]),_._v("：将经过测试的软件在实际环境中运行，并与其他系统的成分（如数据库、硬件和操作人员等）组合在一起进行测试。")]),_._v(" "),t("li",[t("strong",[_._v("验收测试")]),_._v("：主要是对软件产品说明进行验证，逐行逐字的按照说明书的描述对软件产品进行测试，确保其符合客户的各项要求。")])]),_._v(" "),t("p",[t("strong",[_._v("（2）按照测试技术分类")])]),_._v(" "),t("ul",[t("li",[t("strong",[_._v("黑盒测试")]),_._v("：把软件（程序）当作一个"),t("strong",[_._v("有输入与输出的黑匣子")]),_._v("，它把程序当作一个输入域到输出域的映射，只要输入的数据能输出预期的结果即可，不必关心程序内部是怎么样实现的。")])]),_._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210327122640913.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDgwMzc1Mw==,size_16,color_FFFFFF,t_70#pic_center",alt:"黑盒测试"}})]),_._v(" "),t("ul",[t("li",[t("strong",[_._v("白盒测试")]),_._v("：测试人员了解软件程序的"),t("strong",[_._v("逻辑结构、路径与运行过程")]),_._v("，在测试时，按照程序的执行路径得出结果。白盒测试就是把软件（程序）当作一个透明的盒子，测试人员清楚的知道从输入到输出的每一步过程。")])]),_._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210327122652457.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDgwMzc1Mw==,size_16,color_FFFFFF,t_70#pic_center",alt:"白盒测试"}})]),_._v(" "),t("blockquote",[t("p",[t("strong",[_._v("总结：")])]),_._v(" "),t("p",[_._v("相对于黑盒测试来说，白盒测试对测试人员的要求会更高一点，它要求测试人员具有一定的编程能力，而且要熟悉各种脚本语言。但是在软件公司里，黑盒测试与白盒测试并不是界限分明的，在测试一款软件时往往是黑盒测试与白盒测试相结合对软件进行完整全面的测试。")])]),_._v(" "),t("p",[t("strong",[_._v("（3）按照软件质量特性分类")])]),_._v(" "),t("ul",[t("li",[t("strong",[_._v("功能测试")]),_._v("：测试软件的"),t("strong",[_._v("功能")]),t("u",[_._v("是否满足客户的需求")]),_._v("，包括准确性、易用性、适合性、互操作性等。")]),_._v(" "),t("li",[t("strong",[_._v("性能测试")]),_._v("：测试软件的"),t("strong",[_._v("性能")]),t("u",[_._v("是否满足客户的需求")]),_._v("，性能测试包括负载测试、压力测试、兼容性测试、可移植性测试和健壮性测试等。")])]),_._v(" "),t("p",[t("strong",[_._v("（4）按照自动化程度分类")])]),_._v(" "),t("ul",[t("li",[t("strong",[_._v("手工测试")]),_._v("：测试人员"),t("strong",[_._v("一条一条的")]),_._v("执行代码完成测试工作。费时费力且很难保证测试效果。")]),_._v(" "),t("li",[t("strong",[_._v("自动化测试")]),_._v("：借助"),t("strong",[_._v("脚本")]),_._v("、"),t("strong",[_._v("自动化测试工具")]),_._v("等完成相应的测试工作，它也需要人工的参与，但是它可以将要执行的测试代码或流程写成脚本，执行脚本完成整个测试工作。")])]),_._v(" "),t("p",[t("strong",[_._v("（5）按照测试项目分类")])]),_._v(" "),t("ul",[t("li",[t("strong",[_._v("界面类测试")]),_._v("：验证"),t("strong",[_._v("软件界面")]),t("u",[_._v("是否符合客户需求")]),_._v("。")]),_._v(" "),t("li",[t("strong",[_._v("安全性测试")]),_._v("：软件遭受到"),t("strong",[_._v("没有授权的内部或外部用户")]),_._v("的攻击或恶意破坏时如何进行处理，是否能保证软件与数据的安全。")]),_._v(" "),t("li",[t("strong",[_._v("文档测试")]),_._v("：以需求分析、软件设计、用户手册、安装手册为主，主要验证"),t("strong",[_._v("文档说明与实际软件之间")]),_._v("是否存在差异。")])]),_._v(" "),t("p",[t("strong",[_._v("（6）其他分类")])]),_._v(" "),t("ul",[t("li",[t("strong",[_._v("α 测试")]),_._v("：软件"),t("strong",[_._v("上线之前")]),_._v("进行的版本测试。由开发人员和测试人员或者用户协助进行测试。测试人员记录使用过程中出现的错误与问题，"),t("strong",[_._v("整个测试过程是可控的")]),_._v("。")]),_._v(" "),t("li",[t("strong",[_._v("β 测试")]),_._v("：软件"),t("strong",[_._v("上线之后")]),_._v("进行的版本测试。由用户在使用过程中发现错误与问题并进行记录，然后反馈给开发人员进行修复。")]),_._v(" "),t("li",[t("strong",[_._v("回归测试")]),_._v("：对"),t("strong",[_._v("修改后的程序重新进行测试")]),_._v("，确认原有的缺陷已经消除并且没有引入新的缺陷，这个重新测试的过程就叫作回归测试。")]),_._v(" "),t("li",[t("strong",[_._v("随机测试")]),_._v("：没有测试用例、检查列表、脚本或指令的测试，它主要是"),t("strong",[_._v("根据测试人员的经验")]),_._v("对软件进行功能和性能抽查。")])]),_._v(" "),t("h1",{attrs:{id:"四、-软件测试与软件开发的关系"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四、-软件测试与软件开发的关系"}},[_._v("#")]),_._v(" 四、 软件测试与软件开发的关系")]),_._v(" "),t("p",[_._v("软件测试在软件开发过程中占有重要的地位，在传统的瀑布模型中，软件测试只成为其阶段性的一段工作——进行代码的测试。而现代软件工程思想将软件测试认为是贯穿整个软件生命周期，并且是保证软件质量的重要手段之一。")]),_._v(" "),t("p",[_._v("有些研究数据显示，在国外软件开发的工作量中，软件测试的工作量占有总工作量的 40%左右；软件开发的总费用中软件测试占有 30%-50%。对于一些高科技开发系统，软件测试占有的时间和费用可能更多更高。")]),_._v(" "),t("p",[t("strong",[_._v("1、软件测试与软件开发")])]),_._v(" "),t("p",[t("strong",[_._v("软件测试在项目各个阶段的作用如下")]),_._v("：")]),_._v(" "),t("ul",[t("li",[t("strong",[_._v("项目规划阶段")]),_._v("：负责从单元测试到系统测试的整个测试阶段的监控。")]),_._v(" "),t("li",[t("strong",[_._v("需求分析阶段")]),_._v("：确定测试需求分析，即确定在项目中需要测试什么，同时制定系统测试计划。")]),_._v(" "),t("li",[t("strong",[_._v("概要设计与详细设计阶段")]),_._v("：制定单元测试计划和集成测试计划。")]),_._v(" "),t("li",[t("strong",[_._v("编码阶段")]),_._v("：编写相应的测试代码和测试脚本。")]),_._v(" "),t("li",[t("strong",[_._v("测试阶段")]),_._v("：执行测试并提交相应的测试报告。")])]),_._v(" "),t("p",[t("strong",[_._v("软件测试与软件开发的关系如下图所示")]),_._v("：")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210327124810925.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDgwMzc1Mw==,size_16,color_FFFFFF,t_70#pic_center",alt:"软件测试与软件开发的关系"}})]),_._v(" "),t("p",[t("strong",[_._v("2、常见软件测试模型")])]),_._v(" "),t("p",[t("strong",[_._v("（1）V 模型")])]),_._v(" "),t("ul",[t("li",[t("strong",[_._v("优点")]),_._v("：将复杂的测试工作分成了目标明确的小阶段完成，具有阶段性、顺序性和依赖性，它既包含了对于源代码的底层测试也包含了对于软件需求的高层测试。")]),_._v(" "),t("li",[t("strong",[_._v("缺点")]),_._v("：只能在编码之后才能开始测试，早期的需求分析等前期工作没有涵盖其中，因此它不能发现需求分析等早期的错误，这为后期的系统测试、验收测试埋下了隐患。")])]),_._v(" "),t("p",[t("strong",[_._v("V 模型流程图如下")]),_._v("：")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210327122929795.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDgwMzc1Mw==,size_16,color_FFFFFF,t_70#pic_center",alt:"V模型"}})]),_._v(" "),t("p",[t("strong",[_._v("（2）W 模型")])]),_._v(" "),t("ul",[t("li",[t("strong",[_._v("优点")]),_._v("：测试范围不仅包括程序，还包括需求分析、软件设计等前期工作，这样有利于尽早全面的发现问题。")]),_._v(" "),t("li",[t("strong",[_._v("缺点")]),_._v("：它将软件开发过程分成需求、设计、编码、集成等一系列的串行活动，无法支持迭代、自发性等需要变更调整的项目。")])]),_._v(" "),t("p",[t("strong",[_._v("W 模型流程图如下")]),_._v("：")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210327122940698.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDgwMzc1Mw==,size_16,color_FFFFFF,t_70#pic_center",alt:"W模型"}})]),_._v(" "),t("p",[t("strong",[_._v("（3）H 模型")])]),_._v(" "),t("ul",[t("li",[t("p",[t("strong",[_._v("设计原理")]),_._v("：H 模型的设计原理是将测试活动完全独立了出来，形成一个完全独立的流程，这个流程将"),t("strong",[_._v("测试准备活动")]),_._v("和"),t("strong",[_._v("测试执行活动")]),_._v("清晰的体现出来。测试流程和其他工作流程是"),t("strong",[_._v("并发执行的")]),_._v("，只要某一个工作流程的条件成熟就可以开始进行测试。")])]),_._v(" "),t("li",[t("p",[t("strong",[_._v("优点")]),_._v("：")]),_._v(" "),t("ul",[t("li",[_._v("开发的 H 模型揭示了软件测试除测试执行外，还有很多工作；")]),_._v(" "),t("li",[_._v("软件测试"),t("strong",[_._v("完全独立")]),_._v("，"),t("strong",[_._v("贯穿整个生命周期")]),_._v("，且与其他流程"),t("strong",[_._v("并发进行")]),_._v("；")]),_._v(" "),t("li",[_._v("软件测试活动可以"),t("strong",[_._v("尽早准备")]),_._v("、"),t("strong",[_._v("尽早执行")]),_._v("，具有很强的灵活性；")]),_._v(" "),t("li",[_._v("软件测试可以根据被测物的不同而"),t("strong",[_._v("分层次、分阶段、分次序")]),_._v("的执行，同时也是"),t("strong",[_._v("可以被迭代的")]),_._v("。")])])]),_._v(" "),t("li",[t("p",[t("strong",[_._v("缺点")]),_._v("：")]),_._v(" "),t("ul",[t("li",[t("strong",[_._v("管理型要求高")]),_._v("：由于模型很灵活，必须要定义清晰的规则和管理制度，否则测试过程将非常难以管理和控制；")]),_._v(" "),t("li",[t("strong",[_._v("技能要求高")]),_._v("：H 模型要求能够很好的定义每个迭代的规模，"),t("strong",[_._v("不能太大也不能太小")]),_._v("；")]),_._v(" "),t("li",[t("strong",[_._v("测试就绪点分析困难")]),_._v("：测试很多的时候，你并不知道测试准备到什么时候是合适的，就绪点在哪里，就绪点的标准是什么，这就对后续的测试执行的启动带来很大困难；")]),_._v(" "),t("li",[t("strong",[_._v("对于整个项目组的人员要求非常高")]),_._v("：在很好的规范制度下，大家都能高效的工作，否则容易混乱。例如：你分了一个小的迭代，但是因为人员技能不足，使得无法有效完成，那么整个项目就会受到很大的干扰。")])])])]),_._v(" "),t("p",[t("strong",[_._v("H 模型流程图如下")]),_._v("：")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210327122952114.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDgwMzc1Mw==,size_16,color_FFFFFF,t_70#pic_center",alt:"H模型"}})]),_._v(" "),t("p",[t("strong",[_._v("（4）X 模型")])]),_._v(" "),t("ul",[t("li",[t("strong",[_._v("设计原理")]),_._v("：X 模型的设计原理是将程序分成多个片段反复迭代测试，然后将多个片段集成再进行迭代测试。")]),_._v(" "),t("li",[t("strong",[_._v("优点")]),_._v("：对"),t("strong",[_._v("单独程序片段")]),_._v("进行的相互分离的编码和测试，保证了测试效果。增加了"),t("strong",[_._v("探索测试")]),_._v("，可以帮助测试人员发现计划之外的软件错误。")]),_._v(" "),t("li",[t("strong",[_._v("缺点")]),_._v("："),t("strong",[_._v("频繁的集成")]),_._v("会增加测试成本；探索测试对测试人员要求更高。")])]),_._v(" "),t("p",[t("strong",[_._v("X 模型流程图如下")]),_._v("：")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210327123002389.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDgwMzc1Mw==,size_16,color_FFFFFF,t_70#pic_center",alt:"X模型"}})]),_._v(" "),t("blockquote",[t("p",[t("strong",[_._v("经验小结：")])]),_._v(" "),t("ul",[t("li",[_._v("v 模型适用于中小企业，w 模型适用于中大型企业（因为人员要求高），h 模型人员要求非常高，很少有公司使用；")]),_._v(" "),t("li",[_._v("结合 W 模型与 H 模型进行工作，软件各方面的测试内容是以"),t("strong",[_._v("W 模型")]),_._v("为准，而测试周期、测试计划和进度是以"),t("strong",[_._v("H 模型")]),_._v("为指导。"),t("strong",[_._v("X 模型")]),_._v("更多是作为最终测试、熟练性测试的模板，例如，对一个业务的测试已经有 2 年时间，则可以使用 X 模型进行模块化的、探索性的方向测试。")])])]),_._v(" "),t("h1",{attrs:{id:"五、-软件测试的原则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#五、-软件测试的原则"}},[_._v("#")]),_._v(" 五、 软件测试的原则")]),_._v(" "),t("p",[t("strong",[_._v("1、软件测试的原则")])]),_._v(" "),t("p",[t("strong",[_._v("（1）测试应基于客户需求")])]),_._v(" "),t("p",[_._v("所有的测试工作都应该建立在满足"),t("strong",[_._v("客户需求")]),_._v("的基础上，从"),t("strong",[_._v("客户角度")]),_._v("来看，最严重的错误就是软件无法满足要求。有时候，软件产品的测试结果非常完美，但却不是客户最终想要的产品，那么软件产品的开发就是失败的，而测试工作也是没有任何意义的。因此测试应依照客户的"),t("strong",[_._v("需求配置环境")]),_._v("并且按照客户的"),t("strong",[_._v("使用习惯")]),_._v("进行测试并评价结果。")]),_._v(" "),t("p",[t("strong",[_._v("（2）测试要尽早进行和不断进行")])]),_._v(" "),t("p",[_._v("软件的错误存在于"),t("strong",[_._v("软件生命周期")]),_._v("的各个阶段，因此应该尽早开展测试工作，把软件测试贯穿到"),t("strong",[_._v("软件生命周期")]),_._v("的各个阶段中，这样测试人员能够尽早地发现和预防错误，降低错误修复的成本。尽早的开展测试工作有利于帮助测试人员了解软件产品的需求和设计，从而预测测试的难度和风险，制定出完善的计划和方案，提高测试的效率。")]),_._v(" "),t("p",[t("strong",[_._v("（3）穷举测试是不可能的")])]),_._v(" "),t("p",[_._v("由于"),t("strong",[_._v("时间")]),_._v("和"),t("strong",[_._v("资源")]),_._v("的限制，进行完全（各种输入和输出的全部组合）的测试是不可能的，测试人员可以根据测试的"),t("strong",[_._v("风险")]),_._v("和"),t("strong",[_._v("优先级")]),_._v("等确定测试的关注点，从而控制测试的工作量，在测试成本、风险和收益之间求得平衡。")]),_._v(" "),t("p",[t("strong",[_._v("（4）遵循 GoodEnough 原则")])]),_._v(" "),t("p",[_._v("GoodEnough 原则是指测试的投入与产出要适当权衡，形成充分的质量评估过程，这个过程建立在测试花费的代价之上。测试不充分无法保证软件产品的质量，但测试投入过多会造成资源的浪费。随着测试资源投入的增加，测试的产出也是增加的，但当投入达到一定的比例后，测试的效果就不会明显增强了。因此在测试时要根据实际要求和产品质量考虑测试的投入，最好使测试投入与产出达到一个 GoodEnough 状态。")]),_._v(" "),t("p",[t("strong",[_._v("（5）测试缺陷要符合“二八”定理")])]),_._v(" "),t("p",[_._v("一般情况下，软件"),t("strong",[_._v("80%的缺陷会集中在 20%的模块")]),_._v("中，"),t("strong",[_._v("缺陷并不是平均分布的")]),_._v("。因此在测试时，要抓住主要矛盾，如果发现某些模块比其他模块具有更多的缺陷，则要投入更多的人力、精力重点测试这些模块以提高测试效率。")]),_._v(" "),t("p",[t("strong",[_._v("（6）避免缺陷免疫")])]),_._v(" "),t("p",[_._v("测试用例被反复使用，发现缺陷的能力就会越来越差；测试人员对软件越熟悉越会忽略一些看起来比较小的问题，发现缺陷的能力也越差，这种现象被称为软件测试的“"),t("strong",[_._v("杀虫剂")]),_._v("”"),t("strong",[_._v("现象")]),_._v("。它主要是由于测试人员没有及时更新测试用例或者是对测试用例和测试对象过于熟悉，形成了思维定势。")]),_._v(" "),t("h1",{attrs:{id:"六、-软件测试的流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#六、-软件测试的流程"}},[_._v("#")]),_._v(" 六、 软件测试的流程")]),_._v(" "),t("p",[t("strong",[_._v("1、软件测试的基本流程")])]),_._v(" "),t("p",[_._v("不同类型的软件产品测试的方式和重点不一样，测试流程也会不一样。同样类型的软件产品，不同的公司所制定的测试流程也会不一样。虽然不同软件的详细测试步骤不同，但它们所遵循的最基本的测试流程是一样的。")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210327123016506.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDgwMzc1Mw==,size_16,color_FFFFFF,t_70#pic_center",alt:"软件测试的基本流程"}})]),_._v(" "),t("p",[t("strong",[_._v("（1）分析测试需求")])]),_._v(" "),t("p",[_._v("测试人员在制定测试计划之前需要先对软件需求进行分析，以便对要开发的软件产品有一个清晰的认识，从而明确测试对象及测试工作的范围和测试重点。在分析需求时还可以获取一些测试数据，作为测试计划的基本依据，为后续的测试打好基础。")]),_._v(" "),t("p",[_._v("此外，分析测试需求也是对软件需求进行测试，以发现软件需求中不合理的地方。")]),_._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("strong",[_._v("序号")])]),_._v(" "),t("th",[t("strong",[_._v("检查项")])]),_._v(" "),t("th",[t("strong",[_._v("检查结果")])]),_._v(" "),t("th",[t("strong",[_._v("说明")])])])]),_._v(" "),t("tbody",[t("tr",[t("td",[t("strong",[_._v("1")])]),_._v(" "),t("td",[_._v("是否覆盖了客户提出的所有需求项")]),_._v(" "),t("td",[_._v("是【】否【】NA【】")]),_._v(" "),t("td")]),_._v(" "),t("tr",[t("td",[t("strong",[_._v("2")])]),_._v(" "),t("td",[_._v("用词是否清晰、语义是否存在歧义")]),_._v(" "),t("td",[_._v("是【】否【】NA【】")]),_._v(" "),t("td")]),_._v(" "),t("tr",[t("td",[t("strong",[_._v("3")])]),_._v(" "),t("td",[_._v("是否清楚地描述了软件需要做什么以及不做什么")]),_._v(" "),t("td",[_._v("是【】否【】NA【】")]),_._v(" "),t("td")]),_._v(" "),t("tr",[t("td",[t("strong",[_._v("4")])]),_._v(" "),t("td",[_._v("是否描述了软件的目标环境，包括软硬件环境")]),_._v(" "),t("td",[_._v("是【】否【】NA【】")]),_._v(" "),t("td")]),_._v(" "),t("tr",[t("td",[t("strong",[_._v("5")])]),_._v(" "),t("td",[_._v("是否对需求项进行了合理的编号")]),_._v(" "),t("td",[_._v("是【】否【】NA【】")]),_._v(" "),t("td")]),_._v(" "),t("tr",[t("td",[t("strong",[_._v("6")])]),_._v(" "),t("td",[_._v("需求项是否前后一致、彼此不冲突")]),_._v(" "),t("td",[_._v("是【】否【】NA【】")]),_._v(" "),t("td")]),_._v(" "),t("tr",[t("td",[t("strong",[_._v("7")])]),_._v(" "),t("td",[_._v("是否清楚地说明了软件的每个输入、输出格式，以及输入与输出之间的对应关系")]),_._v(" "),t("td",[_._v("是【】否【】NA【】")]),_._v(" "),t("td")]),_._v(" "),t("tr",[t("td",[t("strong",[_._v("8")])]),_._v(" "),t("td",[_._v("是否清晰地描述了软件系统的性能要求")]),_._v(" "),t("td",[_._v("是【】否【】NA【】")]),_._v(" "),t("td")]),_._v(" "),t("tr",[t("td",[t("strong",[_._v("9")])]),_._v(" "),t("td",[_._v("需求的优先级是否合理分配")]),_._v(" "),t("td",[_._v("是【】否【】NA【】")]),_._v(" "),t("td")]),_._v(" "),t("tr",[t("td",[t("strong",[_._v("10")])]),_._v(" "),t("td",[_._v("是否描述了各种约束条件")]),_._v(" "),t("td",[_._v("是【】否【】NA【】")]),_._v(" "),t("td")])])]),_._v(" "),t("p",[_._v("被确定的测试需求必须是可核实的，测试需求必须有一个"),t("strong",[_._v("可观察")]),_._v("、"),t("strong",[_._v("可评测")]),_._v("的结果。无法核实的需求就不是测试需求。测试需求分析还要与客户进行交流，以澄清某些混淆，确保测试人员与客户尽早地对项目达成共识。")]),_._v(" "),t("p",[t("strong",[_._v("（2）制定测试计划")])]),_._v(" "),t("p",[_._v("测试计划一般要做好以下工作安排。")]),_._v(" "),t("ul",[t("li",[t("strong",[_._v("确定测试范围")]),_._v("：明确哪些对象是需要测试的，哪些对象不是需要测试的。")]),_._v(" "),t("li",[t("strong",[_._v("制定测试策略")]),_._v("：测试策略是测试计划中最重要的部分，它将要测试的内容划分出不同的优先级，并确定测试重点。根据测试模块的特点和测试类型（如功能测试、性能测试）选定测试环境和测试方法（如人工测试、自动化测试）。")]),_._v(" "),t("li",[t("strong",[_._v("安排测试资源")]),_._v("：通过对测试难度、时间、工作量等因素对测试资源合理安排，包括人员分配、工具配置等。")]),_._v(" "),t("li",[t("strong",[_._v("安排测试进度")]),_._v("：根据软件开发计划、产品的整体计划来安排测试工作的进度，同时还要考虑各部分工作的变化。在安排工作进度时，最好在各项测试工作之间预留一个缓冲时间以应对计划变更。")]),_._v(" "),t("li",[t("strong",[_._v("预估测试风险")]),_._v("：罗列出测试工作过程中可能会出现的不确定因素，并制定应对策略。")])]),_._v(" "),t("p",[t("strong",[_._v("（3）设计测试用例")])]),_._v(" "),t("ul",[t("li",[t("strong",[_._v("测试用例")]),_._v("（Test Case）指的是一套详细的测试方案，包括"),t("strong",[_._v("测试环境")]),_._v("、"),t("strong",[_._v("测试步骤")]),_._v("、"),t("strong",[_._v("测试数据")]),_._v("和"),t("strong",[_._v("预期结果")]),_._v("。不同的公司会有不同的测试用例模板，虽然它们在风格和样式上有所不同，但本质上是一样的，都包括了测试用例的基本要素。")]),_._v(" "),t("li",[_._v("测试用例编写的原则是尽量"),t("strong",[_._v("以最少的测试用例")]),_._v("达到最大测试覆盖率。")])]),_._v(" "),t("p",[t("strong",[_._v("（4）执行测试")])]),_._v(" "),t("ul",[t("li",[_._v("测试执行就是按照测试用例执行测试的过程，这是测试人员最主要的活动阶段。")]),_._v(" "),t("li",[_._v("在执行测试时要根据测试用例的优先级进行。")]),_._v(" "),t("li",[_._v("在执行测试过程中，测试人员要密切跟踪测试过程，记录缺陷、形成报告等，这一阶段是测试人员最重要的工作阶段。")])]),_._v(" "),t("p",[t("strong",[_._v("（5）编写测试报告")])]),_._v(" "),t("p",[_._v("一份完整的测试报告必须要包含以下几个要点。")]),_._v(" "),t("ul",[t("li",[t("strong",[_._v("引言")]),_._v("：测试报告编写目的、报告中出现的专业术语解释及参考资料等。")]),_._v(" "),t("li",[t("strong",[_._v("测试概要")]),_._v("：介绍项目背景、测试时间、测试地点及测试人员等信息。")]),_._v(" "),t("li",[t("strong",[_._v("测试内容及执行情况")]),_._v("：描述本次测试模块的"),t("strong",[_._v("版本")]),_._v("、"),t("strong",[_._v("测试类型")]),_._v("，使用的测试用例设计方法及测试通过覆盖率，依据测试的通过情况提供对测试执行过程的评估结论，并给出测试执行活动的改进建议，以供后续测试执行活动借鉴参考。")]),_._v(" "),t("li",[t("strong",[_._v("缺陷统计与分析")]),_._v("：统计本次测试所发现的"),t("strong",[_._v("缺陷数目")]),_._v("、"),t("strong",[_._v("类型")]),_._v("等，分析缺陷产生的原因给出规避措施等建议，同时还要记录"),t("strong",[_._v("残留缺陷")]),_._v("与"),t("strong",[_._v("未解决问题")]),_._v("。")]),_._v(" "),t("li",[t("strong",[_._v("测试结论与建议")]),_._v("：从需求符合度、功能正确性、性能指标等多个维度对版本质量进行"),t("strong",[_._v("总体评价")]),_._v("，给出具体明确的结论。")])]),_._v(" "),t("blockquote",[t("p",[t("strong",[_._v("总结")]),_._v("：测试报告的数据是"),t("strong",[_._v("真实的")]),_._v("，每一条结论的得出都要有评价依据，"),t("strong",[_._v("不能是主观臆断的")]),_._v("。")])]),_._v(" "),t("h1",{attrs:{id:"七、结束语"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#七、结束语"}},[_._v("#")]),_._v(" 七、结束语")]),_._v(" "),t("p",[_._v("下一篇文章讲解黑盒测试和测试用例的基础知识。")]),_._v(" "),t("p",[_._v("关于软件测试的基础知识就讲到这里啦！如有不明白或有误的地方欢迎评论区评论或私信我交流~")]),_._v(" "),t("blockquote",[t("ul",[t("li",[_._v("关注公众号 "),t("strong",[_._v("星期一研究室")]),_._v(" ，不定期分享学习干货，学习路上不迷路~")]),_._v(" "),t("li",[_._v("如果这篇文章对你有用，记得"),t("strong",[_._v("点个赞加个关注")]),_._v("再走哦~")])])])])}),[],!1,null,null,null);v.default=r.exports}}]);